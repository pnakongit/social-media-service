version: "3.8"

services:
  db:
    image: postgres:alpine3.19
    restart: always
    volumes:
      - postgres_data:$PGDATA
    ports:
      - "5432:5432"
    env_file:
      - .env


  app:
    build:
      context: .
    volumes:
      - media_volume:/app/media/
    command: >
      sh -c "python manage.py wait_for_db &&  
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db

  redis:
    image: "redis:alpine"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A social_media_service worker -l info"
    depends_on:
      - app
      - redis
    restart: on-failure
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
             celery -A social_media_service beat -l info --scheduler django"
    depends_on:
      - app
      - redis
    restart: on-failure
    env_file:
      - .env

volumes:
  postgres_data:
  media_volume: